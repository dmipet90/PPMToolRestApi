{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJwtToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","async","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","Link","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJwtToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsNotAuthenticated","userIsAuthenticated","fullName","data-toggle","data-target","AddProject","startDate","endDate","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","projectTasks","projectTask","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleWare","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlogId","ptId","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","projectTasksProp","toDoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","boardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","createdAt","getProjectTask","updatedTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","loginRequest","login","setItem","decodedToken","jwt_decode","component","otherProps","Route","render","Redirect","jwtToken","currentTime","Date","now","exp","App","exact","path","Switch","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cbe922a0.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_POJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_POJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-2\"></i>\r\n                    <span>Project Board</span>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-2\"></i>\r\n                    <span>Update Project Info</span>\r\n                  </li>\r\n                </Link>\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-2\"></i>\r\n                  <span>Delete Project</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJwtToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJwtToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJwtToken from \"../securityUtils/setJwtToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = loginRequest => async dispatch => {\r\n  try {\r\n    const res = await axios.post(\"/api/users/login\", loginRequest);\r\n    const { token } = res.data;\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    setJwtToken(token);\r\n    const decodedToken = jwt_decode(token);\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decodedToken\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJwtToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\"></i>\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            PPMTool v1.0\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"startDate\"\r\n                      value={this.state.startDate}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"endDate\"\r\n                      value={this.state.endDate}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projectTasks: [],\r\n  projectTask: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        projectTasks: action.payload\r\n      };\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        projectTask: action.payload\r\n      };\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        projectTasks: state.projectTasks.filter(\r\n          projectTask => projectTask.projectSequence !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleWare = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleWare), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleWare))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectIdentifier\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.description}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"startDate\"\r\n                    value={this.state.startDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"endDate\"\r\n                    value={this.state.endDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlogId, ptId) {\r\n    this.props.deleteProjectTask(backlogId, ptId);\r\n  }\r\n\r\n  render() {\r\n    const { projectTask } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (projectTask.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (projectTask.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (projectTask.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {projectTask.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{projectTask.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {projectTask.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${projectTask.projectIdentifier}/${projectTask.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              projectTask.projectIdentifier,\r\n              projectTask.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (\r\n  backlogId,\r\n  projectTask,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlogId}`, projectTask);\r\n    history.push(`/projectBoard/${backlogId}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (backlogId, ptId, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlogId}/${ptId}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlogId,\r\n  ptId,\r\n  projectTask,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlogId}/${ptId}`, projectTask);\r\n    history.push(`/projectBoard/${backlogId}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlogId, ptId) => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project task and all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlogId}/${ptId}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: ptId\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlogId => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlogId}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { projectTasksProp } = this.props;\r\n\r\n    const tasks = projectTasksProp.map(projectTask => (\r\n      <ProjectTask key={projectTask.id} projectTask={projectTask} />\r\n    ));\r\n\r\n    let toDoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      let status = tasks[i].props.projectTask.status;\r\n\r\n      if (status === \"toDo\") {\r\n        toDoItems.push(tasks[i]);\r\n      }\r\n      if (status === \"inProgress\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n      if (status === \"done\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {toDoItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { projectTasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let boardContent;\r\n\r\n    const boardAlgorithm = (errors, projectTasks) => {\r\n      if (projectTasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog projectTasksProp={projectTasks} />;\r\n      }\r\n    };\r\n\r\n    boardContent = boardAlgorithm(errors, projectTasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {boardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">New Project Task</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"toDo\">TO DO</option>\r\n                    <option value=\"inProgress\">IN PROGRESS</option>\r\n                    <option value=\"done\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  updateProjectTask,\r\n  getProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      createdAt: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      createdAt\r\n    } = nextProps.projectTask;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      createdAt\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlogId, ptId } = this.props.match.params;\r\n    this.props.getProjectTask(backlogId, ptId, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updatedTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      createdAt: this.state.createdAt\r\n    };\r\n\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      updatedTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                {this.state.projectSequence}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"toDo\">TO DO</option>\r\n                    <option value=\"inProgress\">IN PROGRESS</option>\r\n                    <option value=\"done\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  projectTask: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  projectTask: state.backlog.projectTask,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start you own\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const loginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(loginRequest);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecureRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecureRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToprops = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToprops)(SecureRoute);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJwtToken from \"./securityUtils/setJwtToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecureRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJwtToken(jwtToken);\n  const decodedToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decodedToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decodedToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              // Public routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            {\n              // Private routes\n            }\n            <Switch>\n              <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecureRoute exact path=\"/addProject\" component={AddProject} />\n              <SecureRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecureRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecureRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecureRoute\n                exact\n                path=\"/updateProjectTask/:backlogId/:ptId\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}